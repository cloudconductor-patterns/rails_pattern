#UnixDomainSocket
#upstream unicorn-unix-domain-socket {
#    server unix:/var/run/unicorn/unicorn_unitest.sock fail_timeout=0;
#}
#Tcp
upstream <%= node["nginx_part"]["app_name"] %> {
  server <%= node["cloudconductor"]["ap_host"] %>:<%= node["nginx_part"]["ap_svr_port"] %>;
}

server {
  listen       <%= node["nginx_part"]["web_svr_port"] %>;
  server_name  <%= node["nginx_part"]["web_svr_host"] %>;

  access_log  <%= node["nginx_part"]["app_log_dir"] %>/<%= node["nginx_part"]["app_name"] %>.access.log;
  error_log   <%= node["nginx_part"]["app_log_dir"] %>/<%= node["nginx_part"]["app_name"] %>.error.log debug;

  index <%= node["nginx_part"]["ap_svr_index"] %>;

  location  <%= node["nginx_part"]["ap_svr_url_path"] %> {
    if (-f $request_filename) {
      break;
    }
    proxy_set_header X-Real-IP       $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host            $http_host;

    #UnixDomainSocket
    #  proxy_pass http://unicorn-unix-domain-socket;
    #Tcp
    proxy_pass http://<%= node["nginx_part"]["app_name"] %>;
  }

  #Static File responce setting
  location <%= node["nginx_part"]["web_svr_url"] %> {
    root <%= node["nginx_part"]["static_root"] %>/public;
  }

}
