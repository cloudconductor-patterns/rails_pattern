require_relative '../spec_helper'
require_relative '../../libraries/helper'

describe CloudConductor::Helper do
  describe '#generate_random' do
    before do
      @helper = Object.new
      @helper.extend CloudConductor::Helper
    end

    it 'return random string that length is 32 characters' do
      node = { cloudconductor: { seed: 20 } }
      allow(@helper).to receive(:node).and_return(node)
      expect(@helper.generate_random).to match(/[0-9a-f]{32}/)
    end

    it 'return random string that generated by seed' do
      node = { cloudconductor: { seed: 15 } }
      allow(@helper).to receive(:node).and_return(node)
      expect(@helper.generate_random).to eq('c8f58c8577809c9bc7cb5576afdd11ed')
    end

    it 'return same random string if passed same keys' do
      node = { cloudconductor: { seed: 15 } }
      allow(@helper).to receive(:node).and_return(node)
      random1 = @helper.generate_random('key')
      random2 = @helper.generate_random('key')

      expect(random1).to eq(random2)
    end

    it 'return different random string if passed different keys' do
      node = { cloudconductor: { seed: 15 } }
      allow(@helper).to receive(:node).and_return(node)
      random1 = @helper.generate_random('key1')
      random2 = @helper.generate_random('key2')

      expect(random1).not_to eq(random2)
    end
  end
end
